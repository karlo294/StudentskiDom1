@using StudentskiDom.Models
@model Sobe
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (ViewBag.Novi)
{
    <h2>Kreiranje nove sobe</h2>
}
else
{
    <h2>Ažuriranje podataka o sobama</h2>

}

@using (Html.BeginForm("Azuriraj", "Sobe", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "Ispravite podatke");
    if (!ViewBag.Novi)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.IdSoba, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.IdSoba, new { disabled = true, @class = "form-control" })
                @Html.HiddenFor(x => x.IdSoba)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VelicinaSobe, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.VelicinaSobe, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.VelicinaSobe, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrojKreveta, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.BrojKreveta, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.BrojKreveta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opis, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Opis, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.IdSoba, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.IdSoba, new
                {disabled = true, @class = "form-control"
            })  @*kreiranje sobe funkcionira no ne smije se mjenjati id-u prikazu piše da je id 0 ali kad se soba kreira onda se id automatski incrementira*@

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VelicinaSobe, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.VelicinaSobe, "", new { @class = "text-danger" })
            @Html.ValidationMessageFor(model => model.VelicinaSobe, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BrojKreveta, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.BrojKreveta, "", new { @class = "text-danger" })
            @Html.ValidationMessageFor(model => model.BrojKreveta, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Opis, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.Opis, "", new { @class = "text-danger" })
            @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
        </div>
    </div>
}


<!--button za spremanje-->
<div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
        <button type="submit" class="btn btn-success">
            <span class="glyphicon glyphicon-floppy-disk" aria-hidden="false"></span>Spremi
        </button>
    </div>
</div>
}
<!--link za povratak-->
@Html.ActionLink("Povratak bez spremanja", "Index", "Sobe")

